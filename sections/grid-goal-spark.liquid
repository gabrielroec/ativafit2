{%- style -%}
  .grid-goal-spark {
    padding: 40px 0;
  }

  .grid-goal-spark__heading {
    font-family: 'Barlow', sans-serif !important;
    font-weight: 700 !important;
    font-size: 40px;
    line-height: 42px;
    letter-spacing: 0;
    text-align: center;
    margin: 0 0 60px;
    color: inherit;
  }

  .spark-highlight {
    color: #EB701F;
  }

  .grid-goal-spark__grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 40px;
    max-width: 900px;
    margin: 0 auto;
  }

  .grid-goal-spark__card {
    background: #ffffff;
    border-radius: 35px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease
    , box-shadow 0.3s ease;
    width: 100%;
    max-width: 450px;
    margin: 0 auto;
  }

  .grid-goal-spark__card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  .grid-goal-spark__image {
    width: 100%;
    height: 400px;
    overflow: hidden;
    border-radius: 35px;
  }

  .grid-goal-spark__image img,
  .grid-goal-spark__image svg {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top center;
    display: block;
    border-radius: 35px;
  }

  .grid-goal-spark__content {
    padding: 34px 17px;
  }

  .grid-goal-spark__title {
    font-family: 'Barlow', sans-serif !important;
    font-weight: 700 !important;
    font-size: 30px;
    line-height: 31px;
    letter-spacing: 0;
    color: #000000;
    margin: 0 0 16px;
    width: 100%;
    max-width: 300px;
  }

  .grid-goal-spark__quote {
    font-family: 'Barlow', sans-serif !important;
    font-weight: 500 !important;
    font-style: italic;
    font-size: 18px;
    line-height: 20px;
    letter-spacing: 0;
    color: #EB701F;
    margin: 0;
    width: 100%;
    max-width: 350px;
  }

  .grid-goal-spark__spark-text {
    font-weight: 700 !important;
    color: #EB701F;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .grid-goal-spark__heading {
      font-size: 32px;
      line-height: 36px;
      margin-bottom: 40px;
    }

    .grid-goal-spark__desktop {
      display: none;
    }

    .grid-goal-spark__mobile {
      display: block;
    }

    .grid-goal-spark__grid {
      gap: 30px;
      padding: 0 20px;
    }
  }

  @media (max-width: 768px) {
    .grid-goal-spark__grid {
      grid-template-columns: 1fr;
      gap: 30px;
      padding: 0 15px;
    }

    .grid-goal-spark__card {
      max-width: 400px;
    }
  }

  @media (max-width: 480px) {
    .grid-goal-spark__grid {
      padding: 0 10px;
    }

    .grid-goal-spark__content {
      padding: 20px;
    }
  }

  /* Desktop/Tablet Grid */
  .grid-goal-spark__desktop {
    display: block;
  }

  .grid-goal-spark__mobile {
    display: none;
  }

  /* Mobile Components */
  .mobile-slider-container {
    position: relative;
    width: 100%;
    overflow: visible;
  }

  .mobile-card {
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
    background: #ffffff;
    border-radius: 35px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .mobile-card.hidden {
    display: none;
  }

  .mobile-card__image {
    width: 100%;
    height: 400px;
    overflow: visible;
    border-radius: 35px;
    aspect-ratio: 1 / 1;
  }

  .mobile-card__image img,
  .mobile-card__image svg {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    border-radius: 35px;
  }

  .mobile-card__content {
    padding: 34px 17px;
  }

  .mobile-card__title {
    font-family: 'Barlow', sans-serif !important;
    font-weight: 700 !important;
    font-size: 30px;
    line-height: 31px;
    letter-spacing: 0;
    color: #000000;
    margin: 0 0 16px;
    width: 100%;
    max-width: 300px;
  }

  .mobile-card__quote {
    font-family: 'Barlow', sans-serif !important;
    font-weight: 500 !important;
    font-style: italic;
    font-size: 18px;
    line-height: 20px;
    letter-spacing: 0;
    color: #EB701F;
    margin: 0;
    width: 100%;
    max-width: 350px;
  }

  .mobile-card__spark-text {
    font-weight: 700 !important;
    color: #EB701F;
  }

  /* Mobile Dots */
  .mobile-dots {
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-top: 30px;
  }

  .mobile-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: none;
    background-color: #E0E0E0;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .mobile-dot.active,
  .mobile-dot:hover {
    background-color: #EB701F;
  }

  /* Mobile breakpoint - a partir de 1024px para baixo */
  @media (max-width: 1024px) {
    .grid-goal-spark__heading {
      font-size: 32px;
      line-height: 36px;
      margin-bottom: 40px;
    }

    .grid-goal-spark__desktop {
      display: none !important;
    }

    .grid-goal-spark__mobile {
      display: block !important;
    }

    /* Garantir que o mobile slider seja vis√≠vel */
    .mobile-slider-container {
      display: block !important;
      visibility: visible !important;
      opacity: 1 !important;
    }

    .mobile-card {
      display: block !important;
    }

    .mobile-card.hidden {
      display: none !important;
    }

    .mobile-dots {
      display: flex !important;
    }
  }
{%- endstyle -%}

<section
  class="section grid-goal-spark"
  data-section-id="{{ section.id }}"
  data-section-type="grid-goal-spark"
  style="padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px;">
  <div class="container">
    {%- if section.settings.main_title_part1 != blank or section.settings.spark_text != blank -%}
      <h2 class="grid-goal-spark__heading">
        {{ section.settings.main_title_part1 }}
        <span class="spark-highlight">{{ section.settings.spark_text }}</span>
        {{ section.settings.main_title_part2 }}
      </h2>
    {%- endif -%}

    {%- if section.blocks.size > 0 -%}
      <!-- Desktop/Tablet Grid -->
      <div class="grid-goal-spark__desktop">
        <div class="grid-goal-spark__grid">
          {%- for block in section.blocks -%}
            <div class="grid-goal-spark__card" {{ block.shopify_attributes }}>
              <div class="grid-goal-spark__image">
                {%- if block.settings.card_image != blank -%}
                  <img
                    src="{{ block.settings.card_image | img_url: '400x450' }}"
                    alt="{{ block.settings.card_image.alt | default: block.settings.card_title }}"
                    width="400"
                    height="450"
                    loading="lazy">
                {%- else -%}
                  {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-image' }}
                {%- endif -%}
              </div>
              <div class="grid-goal-spark__content">
                {%- if block.settings.card_title != blank -%}
                  <h3 class="grid-goal-spark__title">{{ block.settings.card_title | escape }}</h3>
                {%- endif -%}

                {%- if block.settings.card_quote_part1 != blank -%}
                  <p class="grid-goal-spark__quote">
                    "{{ block.settings.card_quote_part1 }}
                    {%- if block.settings.card_spark_text != blank -%}
                      <span class="grid-goal-spark__spark-text">{{ block.settings.card_spark_text }}</span>
                    {%- endif -%}
                    {{ block.settings.card_quote_part2 }}"
                  </p>
                {%- endif -%}
              </div>
            </div>
          {%- endfor -%}
        </div>
      </div>

      <!-- Mobile Slider -->
      <div class="grid-goal-spark__mobile" id="mobile-slider-{{ section.id }}">
        <div class="mobile-slider-container">
          <div class="mobile-slide active" data-slide="0">
            {%- for block in section.blocks -%}
              <div
                class="mobile-card{% unless forloop.first %} hidden{% endunless %}"
                data-card="{{ forloop.index0 }}"
                {{ block.shopify_attributes }}>
                <div class="mobile-card__image">
                  {%- if block.settings.card_image != blank -%}
                    <img
                      src="{{ block.settings.card_image | img_url: '400x450' }}"
                      alt="{{ block.settings.card_image.alt | default: block.settings.card_title }}"
                      width="400"
                      height="450"
                      loading="lazy">
                  {%- else -%}
                    {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-image' }}
                  {%- endif -%}
                </div>
                <div class="mobile-card__content">
                  {%- if block.settings.card_title != blank -%}
                    <h3 class="mobile-card__title">{{ block.settings.card_title | escape }}</h3>
                  {%- endif -%}

                  {%- if block.settings.card_quote_part1 != blank -%}
                    <p class="mobile-card__quote">
                      "{{ block.settings.card_quote_part1 }}
                      {%- if block.settings.card_spark_text != blank -%}
                        <span class="mobile-card__spark-text">{{ block.settings.card_spark_text }}</span>
                      {%- endif -%}
                      {{ block.settings.card_quote_part2 }}"
                    </p>
                  {%- endif -%}
                </div>
              </div>
            {%- endfor -%}
          </div>
        </div>

        {%- if section.blocks.size > 1 -%}
          <div class="mobile-dots" id="mobile-dots-{{ section.id }}">
            {%- for block in section.blocks -%}
              <button class="mobile-dot{% if forloop.first %} active{% endif %}" data-slide="{{ forloop.index0 }}"></button>
            {%- endfor -%}
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    console.log('Grid Goal Spark: DOM Content Loaded');
    
    const sectionId = '{{ section.id }}';
    console.log('Grid Goal Spark: Section ID:', sectionId);
    
    const mobileSlider = document.getElementById('mobile-slider-' + sectionId);
    console.log('Grid Goal Spark: Mobile Slider Element:', mobileSlider);
    
    const mobileDotsContainer = document.getElementById('mobile-dots-' + sectionId);
    console.log('Grid Goal Spark: Mobile Dots Container:', mobileDotsContainer);
    
    if (!mobileSlider) {
      console.error('Grid Goal Spark: Mobile slider not found!');
      return;
    }
    
    const mobileCards = mobileSlider.querySelectorAll('.mobile-card');
    console.log('Grid Goal Spark: Mobile Cards Found:', mobileCards.length);
    
    if (mobileCards.length === 0) {
      console.error('Grid Goal Spark: No mobile cards found!');
      return;
    }
    
    let currentSlide = 0;
    
    function showMobileSlide(index) {
      console.log('Grid Goal Spark: Showing slide:', index);
      
      // Validate index
      if (index < 0 || index >= mobileCards.length) {
        console.error('Grid Goal Spark: Invalid slide index:', index);
        return;
      }
      
      // Hide all cards
      mobileCards.forEach((card, i) => {
        const isHidden = i !== index;
        card.classList.toggle('hidden', isHidden);
        console.log(`Grid Goal Spark: Card ${i} hidden:`, isHidden);
      });
      
      // Update dots
      if (mobileDotsContainer) {
        const mobileDots = mobileDotsContainer.querySelectorAll('.mobile-dot');
        mobileDots.forEach((dot, i) => {
          const isActive = i === index;
          dot.classList.toggle('active', isActive);
          console.log(`Grid Goal Spark: Dot ${i} active:`, isActive);
        });
      }
      
      currentSlide = index;
      console.log('Grid Goal Spark: Current slide updated to:', currentSlide);
    }
    
    function nextSlide() {
      const newSlide = currentSlide < mobileCards.length - 1 ? currentSlide + 1 : 0;
      console.log('Grid Goal Spark: Next slide from', currentSlide, 'to', newSlide);
      showMobileSlide(newSlide);
    }
    
    function prevSlide() {
      const newSlide = currentSlide > 0 ? currentSlide - 1 : mobileCards.length - 1;
      console.log('Grid Goal Spark: Previous slide from', currentSlide, 'to', newSlide);
      showMobileSlide(newSlide);
    }
    
    // Add click events to dots
    if (mobileDotsContainer) {
      const mobileDots = mobileDotsContainer.querySelectorAll('.mobile-dot');
      console.log('Grid Goal Spark: Adding click events to', mobileDots.length, 'dots');
      
      mobileDots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
          console.log('Grid Goal Spark: Dot clicked:', index);
          showMobileSlide(index);
        });
      });
    }
    
    // Touch/swipe support - igual ao sistema das video reviews
    let touchStartX = 0;
    let touchMoved = false;
    
    mobileSlider.addEventListener('touchstart', (e) => {
      if (window.innerWidth > 1024) return;
      touchStartX = e.touches[0].clientX;
      touchMoved = false;
      console.log('Grid Goal Spark: Touch start at X:', touchStartX);
    }, { passive: true });
    
    mobileSlider.addEventListener('touchmove', (e) => {
      if (window.innerWidth > 1024) return;
      const deltaX = Math.abs(e.touches[0].clientX - touchStartX);
      if (deltaX > 15) {
        touchMoved = true;
        e.preventDefault();
        console.log('Grid Goal Spark: Touch moved, delta X:', deltaX);
      }
    }, { passive: false });
    
    mobileSlider.addEventListener('touchend', (e) => {
      if (window.innerWidth > 1024 || !touchMoved) return;
      
      const touchEndX = e.changedTouches[0].clientX;
      const deltaX = touchEndX - touchStartX;
      const threshold = 75;
      
      console.log('Grid Goal Spark: Touch end, delta X:', deltaX, 'threshold:', threshold);
      
      if (Math.abs(deltaX) > threshold) {
        if (deltaX > 0 && currentSlide > 0) {
          console.log('Grid Goal Spark: Swipe right, going to previous slide');
          showMobileSlide(currentSlide - 1);
        } else if (deltaX < 0 && currentSlide < mobileCards.length - 1) {
          console.log('Grid Goal Spark: Swipe left, going to next slide');
          showMobileSlide(currentSlide + 1);
        }
      }
    }, { passive: true });
    
    // Initialize mobile slider
    console.log('Grid Goal Spark: Initializing mobile slider...');
    
    // Verificar estrutura HTML
    console.log('Grid Goal Spark: HTML Structure Check:');
    console.log('- Mobile Slider:', mobileSlider.outerHTML);
    console.log('- Mobile Cards:', Array.from(mobileCards).map(card => card.outerHTML));
    console.log('- Mobile Dots:', mobileDotsContainer ? mobileDotsContainer.outerHTML : 'Not found');
    
    showMobileSlide(0);
    
    console.log('Grid Goal Spark: Mobile slider initialized successfully with', mobileCards.length, 'cards');
  });
</script>

{% schema %}
  {
    "name": "Grid Goal Spark",
    "max_blocks": 6,
    "settings": [
      {
        "type": "header",
        "content": "Main Title Settings"
      },
      {
        "type": "text",
        "id": "main_title_part1",
        "label": "Title Part 1",
        "default": "For Every Goal, A New"
      },
      {
        "type": "text",
        "id": "spark_text",
        "label": "Spark Text (highlighted)",
        "default": "Spark"
      },
      {
        "type": "text",
        "id": "main_title_part2",
        "label": "Title Part 2 (optional)"
      }, {
        "type": "header",
        "content": "Spacing Settings"
      }, {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 40
      }, {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding bottom",
        "default": 40
      }
    ],
    "blocks": [
      {
        "type": "strength_card",
        "name": "Strength Card",
        "settings": [
          {
            "type": "image_picker",
            "id": "card_image",
            "label": "Card Image"
          },
          {
            "type": "text",
            "id": "card_title",
            "label": "Card Title",
            "default": "New to Strength Training"
          },
          {
            "type": "text",
            "id": "card_quote_part1",
            "label": "Quote Part 1",
            "default": "I always wanted to start but felt intimidated."
          },
          {
            "type": "text",
            "id": "card_spark_text",
            "label": "Spark Text in Quote",
            "default": "Spark"
          }, {
            "type": "text",
            "id": "card_quote_part2",
            "label": "Quote Part 2",
            "default": "was the perfect first step."
          }
        ]
      }
    ],
    "presets": [
      {
        "category": "Text",
        "name": "Grid Goal Spark",
        "settings": {
          "main_title_part1": "For Every Goal, A New",
          "spark_text": "Spark"
        },
        "blocks": [
          {
            "type": "strength_card",
            "settings": {
              "card_title": "New to Strength Training",
              "card_quote_part1": "I always wanted to start but felt intimidated.",
              "card_spark_text": "Spark",
              "card_quote_part2": "was the perfect first step."
            }
          }
        ]
      }
    ]
  }
{% endschema %}
