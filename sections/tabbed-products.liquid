{% comment %} 
                                                              Seção de Produtos com Tabs
                                                              Permite organizar produtos em diferentes categorias/tabs
                                                              Totalmente configurável via Shopify Theme Editor 
{% endcomment %}

<section
  class="tabbed-products"
  data-section-id="{{ section.id }}"
  data-section-type="tabbed-products">
  <div class="container">
    {% if section.settings.heading != blank %}
      <header class="tabbed-products__header">
        <h2 class="tabbed-products__heading black">{{ section.settings.heading }}</h2>
        {% if section.settings.subheading != blank %}
          <p class="tabbed-products__subheading regular">{{ section.settings.subheading }}</p>
        {% endif %}
      </header>
    {% endif %}

    {% if section.blocks.size > 0 %}
      <!-- Tab Navigation -->
      <div class="tabbed-products__nav">
        <div class="tabbed-products__nav-list">
          {% for block in section.blocks %}
            <button
              class="tabbed-products__nav-item{% if forloop.first %} active{% endif %}"
              data-tab="{{ block.id }}"
              {{ block.shopify_attributes }}>
              <span class="condensed-bold">{{ block.settings.tab_title | default: 'Tab' }}</span>
            </button>
          {% endfor %}
        </div>
      </div>

      <!-- Tab Content -->
      <div class="tabbed-products__content">
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'collection_tab' %}
              <div
                class="tabbed-products__panel{% if forloop.first %} active{% endif %}"
                data-panel="{{ block.id }}"
                {{ block.shopify_attributes }}>

                {% assign collection = collections[block.settings.collection] %}
                {% assign products_to_show = block.settings.products_per_row | times: block.settings.rows %}

                {% if collection != blank and collection.products.size > 0 %}
                  <div class="tabbed-products__grid" data-products-per-row="{{ block.settings.products_per_row }}">
                    {% for product in collection.products limit: products_to_show %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: product %}
                      </div>
                    {% endfor %}
                  </div>

                  {% if block.settings.show_view_all and collection.url != blank %}
                    <div class="tabbed-products__footer">
                      <a href="{{ collection.url }}" class="tabbed-products__view-all button button--secondary condensed-bold">
                        {{ block.settings.view_all_text | default: 'VIEW ALL' }}
                      </a>
                    </div>
                  {% endif %}
                {% else %}
                  <div class="tabbed-products__empty">
                    <p class="regular">No products found in {{ block.settings.tab_title | default: 'this category' }}.</p>
                  </div>
                {% endif %}
              </div>

            {% when 'products_tab' %}
              <div
                class="tabbed-products__panel{% if forloop.first %} active{% endif %}"
                data-panel="{{ block.id }}"
                {{ block.shopify_attributes }}>

                {% comment %} Coletar produtos selecionados manualmente {% endcomment %}
                {% assign products_count = 0 %}

                {% comment %} Contar quantos produtos foram selecionados {% endcomment %}
                {% if block.settings.product_1 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}
                {% if block.settings.product_2 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}
                {% if block.settings.product_3 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}
                {% if block.settings.product_4 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}
                {% if block.settings.product_5 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}
                {% if block.settings.product_6 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}
                {% if block.settings.product_7 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}
                {% if block.settings.product_8 != blank %}
                  {% assign products_count = products_count | plus: 1 %}
                {% endif %}

                {% if products_count > 0 %}
                  <div class="tabbed-products__grid" data-products-per-row="{{ block.settings.products_per_row }}">
                    {% if block.settings.product_1 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_1 %}
                      </div>
                    {% endif %}
                    {% if block.settings.product_2 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_2 %}
                      </div>
                    {% endif %}
                    {% if block.settings.product_3 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_3 %}
                      </div>
                    {% endif %}
                    {% if block.settings.product_4 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_4 %}
                      </div>
                    {% endif %}
                    {% if block.settings.product_5 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_5 %}
                      </div>
                    {% endif %}
                    {% if block.settings.product_6 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_6 %}
                      </div>
                    {% endif %}
                    {% if block.settings.product_7 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_7 %}
                      </div>
                    {% endif %}
                    {% if block.settings.product_8 != blank %}
                      <div class="tabbed-products__item">
                        {% render 'product-card-custom'
                          , product: block.settings.product_8 %}
                      </div>
                    {% endif %}
                  </div>

                  {% if block.settings.show_view_all and block.settings.view_all_link != blank %}
                    <div class="tabbed-products__footer">
                      <a href="{{ block.settings.view_all_link }}" class="tabbed-products__view-all button button--secondary condensed-bold">
                        {{ block.settings.view_all_text | default: 'VIEW ALL' }}
                      </a>
                    </div>
                  {% endif %}
                {% else %}
                  <div class="tabbed-products__empty">
                    <p class="regular">No products selected for {{ block.settings.tab_title | default: 'this category' }}.</p>
                  </div>
                {% endif %}
              </div>
          {% endcase %}
        {% endfor %}
      </div>
    {% endif %}
  </div>
</section>

{% style %}
  .tabbed-products {

    background: {{ section.settings.background_color | default: '#ffffff' }};
  }
  .tabbed-products .container {
    max-width: 1350px;
    padding: 0 !important;
  }

  .tabbed-products__header {
    text-align: center;
    margin-bottom: 50px;
  }
  .tabbed-products__header h2,
  .tabbed-products__header p {
    text-align: center;
    width: 100%;
    max-width: 100%;
  }

  .tabbed-products__heading {
    font-size: 36px;
    line-height: 36px;
    font-weight: 700;
    color: {{ section.settings.heading_color | default: '#000000' }};
    margin-bottom: 15px;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-align: center;
  }

  .tabbed-products__subheading {
    font-size: 24px;
    color: {{ section.settings.subheading_color | default: '#666666' }};
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.5;
    text-align: center;
  }

  /* TAB NAVIGATION */
  .tabbed-products__nav {
    margin-bottom: 40px;
    border-bottom: 1px solid #e0e0e0;
  }

  .tabbed-products__nav-list {
    display: flex;
    justify-content: flex-start;
    gap: 0;
    flex-wrap: wrap;
  }

  .tabbed-products__nav-item {
    background: none;
    border: none;
    padding: 15px 30px;
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
    color: #666;
    cursor: pointer;
    transition: all 0.3s ease;
    border-bottom: 3px solid transparent;
    position: relative;
  }

  .tabbed-products__nav-item:hover {
    color: {{ section.settings.tab_hover_color | default: '#EB701F' }};
  }

  .tabbed-products__nav-item.active {
    color: {{ section.settings.tab_active_color | default: '#EB701F' }};
    border-bottom-color: {{ section.settings.tab_active_color | default: '#EB701F' }};
  }

  /* TAB CONTENT */
  .tabbed-products__content {
    position: relative;
  }

  .tabbed-products__panel {
    display: none;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.4s ease;
  }

  .tabbed-products__panel.active {
    display: block;
    opacity: 1;
    transform: translateY(0);
  }

  /* PRODUCT GRID */
  .tabbed-products__grid {
    display: grid;
    gap: 30px;
    margin-bottom: 40px;
  }

  .tabbed-products__grid[data-products-per-row="2"] {
    grid-template-columns: repeat(2, 1fr);
  }

  .tabbed-products__grid[data-products-per-row="3"] {
    grid-template-columns: repeat(3, 1fr);
  }

  .tabbed-products__grid[data-products-per-row="4"] {
    grid-template-columns: repeat(4, 1fr);
  }

  .tabbed-products__grid[data-products-per-row="5"] {
    grid-template-columns: repeat(5, 1fr);
  }

  .tabbed-products__item {
    width: 100%;
  }

  /* FOOTER */
  .tabbed-products__footer {
    text-align: center;
  }

  .tabbed-products__view-all {
    padding: 12px 30px;
    background: transparent;
    border: 2px solid{{ section.settings.button_border_color | default: '#EB701F' }};
    color: {{ section.settings.button_text_color | default: '#EB701F' }};
    text-decoration: none;
    border-radius: 4px;
    transition: all 0.3s ease;
    display: inline-block;
  }

  .tabbed-products__view-all:hover {
    background: {{ section.settings.button_bg_hover | default: '#EB701F' }};
    color: {{ section.settings.button_text_hover | default: '#ffffff' }};
  }

  /* EMPTY STATE */
  .tabbed-products__empty {
    text-align: center;
    padding: 60px 20px;
    color: #999;
  }

  /* RESPONSIVE */
  @media screen and (max-width: 1024px) {
    .tabbed-products__grid[data-products-per-row="5"] {
      grid-template-columns: repeat(4, 1fr);
    }

    .tabbed-products__grid[data-products-per-row="4"] {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media screen and (max-width: 768px) {
    .tabbed-products {
      padding: 40px 0;
    }

    .tabbed-products__heading {
      font-size: 28px;
      line-height: 28px;
      margin-bottom: 10px;
    }

    .tabbed-products__subheading {
      font-size: 14px;
    }

    .tabbed-products__header {
      margin-bottom: 30px;
    }

    .tabbed-products__nav-list {
      justify-content: flex-start;
      overflow-x: auto;
      padding-bottom: 5px;
      -webkit-overflow-scrolling: touch;
    }

    .tabbed-products__nav-item {
      padding: 12px 20px;
      font-size: 13px;
      white-space: nowrap;
    }

    .tabbed-products__grid {
      gap: 20px;
    }

    .tabbed-products__grid[data-products-per-row="5"],
    .tabbed-products__grid[data-products-per-row="4"],
    .tabbed-products__grid[data-products-per-row="3"] {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 480px) {
    .tabbed-products__heading {
      font-size: 28px;
      line-height: 28px;
    }

    .tabbed-products__nav-item {
      padding: 10px 15px;
      font-size: 12px;
    }

    .tabbed-products__grid {
      gap: 15px;
    }
  }
{% endstyle %}

<script>
  class TabbedProducts {
    constructor(element) {
      this.section = element;
      this.navItems = this.section.querySelectorAll('.tabbed-products__nav-item');
      this.panels = this.section.querySelectorAll('.tabbed-products__panel');
      this.init();
    }
  
    init() {
      this.bindEvents();
      this.setupAccessibility();
    }
  
    bindEvents() {
      this.navItems.forEach((item, index) => {
        item.addEventListener('click', (e) => {
          e.preventDefault();
          this.switchTab(item, index);
        });
  
        item.addEventListener('keydown', (e) => {
          this.handleKeyNavigation(e, index);
        });
      });
    }
  
    switchTab(activeItem, activeIndex) {
      const targetPanel = activeItem.dataset.tab;
      
      // Update nav items
      this.navItems.forEach(item => item.classList.remove('active'));
      activeItem.classList.add('active');
  
      // Update panels with smooth transition
      this.panels.forEach(panel => {
        panel.classList.remove('active');
        if (panel.dataset.panel === targetPanel) {
          // Small delay for smooth transition
          setTimeout(() => {
            panel.classList.add('active');
          }, 100);
        }
      });
  
      // Update focus for accessibility
      activeItem.focus();
      
      // Scroll to top of products if needed
      this.scrollToProducts();
    }
  
    handleKeyNavigation(e, currentIndex) {
      let targetIndex;
      
      switch(e.key) {
        case 'ArrowLeft':
          e.preventDefault();
          targetIndex = currentIndex > 0 ? currentIndex - 1 : this.navItems.length - 1;
          break;
        case 'ArrowRight':
          e.preventDefault();
          targetIndex = currentIndex < this.navItems.length - 1 ? currentIndex + 1 : 0;
          break;
        case 'Home':
          e.preventDefault();
          targetIndex = 0;
          break;
        case 'End':
          e.preventDefault();
          targetIndex = this.navItems.length - 1;
          break;
        default:
          return;
      }
      
      this.switchTab(this.navItems[targetIndex], targetIndex);
    }
  
    setupAccessibility() {
      // Add ARIA attributes
      this.navItems.forEach((item, index) => {
        item.setAttribute('role', 'tab');
        item.setAttribute('aria-selected', index === 0 ? 'true' : 'false');
        item.setAttribute('tabindex', index === 0 ? '0' : '-1');
        item.id = `tab-${this.section.dataset.sectionId}-${index}`;
      });
  
      this.panels.forEach((panel, index) => {
        panel.setAttribute('role', 'tabpanel');
        panel.setAttribute('aria-labelledby', `tab-${this.section.dataset.sectionId}-${index}`);
        panel.setAttribute('tabindex', '0');
      });
  
      // Add role to nav list
      const navList = this.section.querySelector('.tabbed-products__nav-list');
      if (navList) {
        navList.setAttribute('role', 'tablist');
      }
    }
  
    scrollToProducts() {
      const content = this.section.querySelector('.tabbed-products__content');
      if (content && window.innerWidth <= 768) {
        content.scrollIntoView({ 
          behavior: 'smooth', 
          block: 'start' 
        });
      }
    }
  }
  
  // Initialize when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    const tabbedProductsSections = document.querySelectorAll('[data-section-type="tabbed-products"]');
    tabbedProductsSections.forEach(section => {
      new TabbedProducts(section);
    });
  });
  
  // Reinitialize when section is loaded in theme editor
  document.addEventListener('shopify:section:load', (event) => {
    if (event.target.querySelector('[data-section-type="tabbed-products"]')) {
      const section = event.target.querySelector('[data-section-type="tabbed-products"]');
      new TabbedProducts(section);
    }
  });
</script>

{% schema %}
  {
    "name": "Tabbed Products",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "header",
        "content": "Heading"
      },
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Accessories for Your Adjustable Dumbbells"
      },
      {
        "type": "text",
        "id": "subheading",
        "label": "Subheading",
        "default": "Extra versatility + easy storage"
      },
      {
        "type": "color",
        "id": "heading_color",
        "label": "Heading Color",
        "default": "#000000"
      }, {
        "type": "color",
        "id": "subheading_color",
        "label": "Subheading Color",
        "default": "#666666"
      }, {
        "type": "header",
        "content": "Styling"
      }, {
        "type": "color",
        "id": "background_color",
        "label": "Background Color",
        "default": "#ffffff"
      }, {
        "type": "color",
        "id": "tab_active_color",
        "label": "Active Tab Color",
        "default": "#EB701F"
      }, {
        "type": "color",
        "id": "tab_hover_color",
        "label": "Tab Hover Color",
        "default": "#EB701F"
      }, {
        "type": "header",
        "content": "View All Button"
      }, {
        "type": "color",
        "id": "button_text_color",
        "label": "Button Text Color",
        "default": "#EB701F"
      }, {
        "type": "color",
        "id": "button_border_color",
        "label": "Button Border Color",
        "default": "#EB701F"
      }, {
        "type": "color",
        "id": "button_bg_hover",
        "label": "Button Background (Hover)",
        "default": "#EB701F"
      }, {
        "type": "color",
        "id": "button_text_hover",
        "label": "Button Text Color (Hover)",
        "default": "#ffffff"
      }
    ],
    "blocks": [
      {
        "type": "collection_tab",
        "name": "Collection Tab",
        "settings": [
          {
            "type": "text",
            "id": "tab_title",
            "label": "Tab Title",
            "default": "See All"
          },
          {
            "type": "collection",
            "id": "collection",
            "label": "Collection"
          },
          {
            "type": "range",
            "id": "products_per_row",
            "label": "Products per Row",
            "min": 2,
            "max": 5,
            "step": 1,
            "default": 4
          },
          {
            "type": "range",
            "id": "rows",
            "label": "Number of Rows",
            "min": 1,
            "max": 3,
            "step": 1,
            "default": 1
          }, {
            "type": "checkbox",
            "id": "show_view_all",
            "label": "Show 'View All' Button",
            "default": true
          }, {
            "type": "text",
            "id": "view_all_text",
            "label": "'View All' Button Text",
            "default": "VIEW ALL"
          }
        ]
      }, {
        "type": "products_tab",
        "name": "Products Tab",
        "settings": [
          {
            "type": "text",
            "id": "tab_title",
            "label": "Tab Title",
            "default": "Products"
          },
          {
            "type": "header",
            "content": "Products Selection"
          },
          {
            "type": "product",
            "id": "product_1",
            "label": "Product 1"
          },
          {
            "type": "product",
            "id": "product_2",
            "label": "Product 2"
          }, {
            "type": "product",
            "id": "product_3",
            "label": "Product 3"
          }, {
            "type": "product",
            "id": "product_4",
            "label": "Product 4"
          }, {
            "type": "product",
            "id": "product_5",
            "label": "Product 5"
          }, {
            "type": "product",
            "id": "product_6",
            "label": "Product 6"
          }, {
            "type": "product",
            "id": "product_7",
            "label": "Product 7"
          }, {
            "type": "product",
            "id": "product_8",
            "label": "Product 8"
          }, {
            "type": "range",
            "id": "products_per_row",
            "label": "Products per Row",
            "min": 2,
            "max": 5,
            "step": 1,
            "default": 4
          }, {
            "type": "checkbox",
            "id": "show_view_all",
            "label": "Show 'View All' Button",
            "default": true
          }, {
            "type": "url",
            "id": "view_all_link",
            "label": "View All Link",
            "info": "Optional: Link to a collection or page"
          }, {
            "type": "text",
            "id": "view_all_text",
            "label": "'View All' Button Text",
            "default": "VIEW ALL"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Tabbed Products",
        "blocks": [
          {
            "type": "collection_tab",
            "settings": {
              "tab_title": "SEE ALL"
            }
          }, {
            "type": "products_tab",
            "settings": {
              "tab_title": "BENCHES"
            }
          }, {
            "type": "products_tab",
            "settings": {
              "tab_title": "STANDS"
            }
          }, {
            "type": "products_tab",
            "settings": {
              "tab_title": "UPGRADE KITS"
            }
          }
        ]
      }
    ]
  }
{% endschema %}