<style>
  .hero-banner-carousel {
    position: relative;
    width: 100%;
    height: 500px;
    overflow: hidden;
  }

  .hero-banner-carousel__container {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .hero-banner-carousel__slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transform: translateX(100%);
  }

  .hero-banner-carousel__slide.active {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
  }

  .hero-banner-carousel__slide.prev {
    transform: translateX(-100%);
  }

  .hero-banner-carousel__slide-link {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 5;
    cursor: pointer;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .hero-banner-carousel__slide-link:hover {
    text-decoration: none;
  }

  .hero-banner-carousel__slide-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0);
    transition: background 0.3s ease;
    pointer-events: none;
  }

  .hero-banner-carousel__slide-link:hover::before {
    background: rgba(255, 255, 255, 0.05);
  }

  .hero-banner-carousel__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .hero-banner-carousel__image--mobile {
    display: none;
  }

  @media screen and (max-width: 768px) {
    .hero-banner-carousel__image--desktop {
      display: none;
    }

    .hero-banner-carousel__image--mobile {
      display: block;
    }
  }

  .hero-banner-carousel__slide.active {
    opacity: 1;
  }

  .hero-banner-carousel__overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
  }

  .hero-banner-carousel__content {
    position: relative;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    max-width: 1750px;
    margin: 0 auto;
    padding: 0 20px;
    z-index: 2;
    color: #ffffff;
  }

  .hero-banner-carousel__text-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    max-width: 625px;
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.8s ease 0.3s;
  }

  .hero-banner-carousel__slide.active .hero-banner-carousel__text-container {
    transform: translateY(0);
    opacity: 1;
  }

  .hero-banner-carousel__title {
    font-size: 50px;
    font-weight: 700;
    text-align: left;
    line-height: 1.2;
    margin-bottom: 16px;
    order: 1;
  }

  .hero-banner-carousel__subtitle {
    font-size: 16px;
    font-weight: 400;
    margin: 0 0 24px;
    order: 2;
  }

  .hero-banner-carousel__buttons {
    display: flex;
    gap: 1rem;
    order: 3;
  }

  .hero-banner-carousel__button {
    padding: 0.75rem 1.5rem;
    border: 2px solid;
    border-radius: 4px;
    text-decoration: none;
    transition: all 0.3s ease;
    font-weight: 600;
    text-transform: uppercase;
  }

  .hero-banner-carousel__button:hover {
    background-color: #EB701F !important;
    color: #fff !important;
    border-color: #EB701F !important;
  }

  /* Navigation Arrows */
  .hero-banner-carousel__navigation {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 18px;
    color: #333;
    z-index: 10;
  }

  .hero-banner-carousel__navigation:hover {
    background: rgba(255, 255, 255, 1);
    transform: translateY(-50%) scale(1.1);
  }

  .hero-banner-carousel__navigation--prev {
    left: 20px;
  }

  .hero-banner-carousel__navigation--next {
    right: 20px;
  }

  /* Dots */
  .hero-banner-carousel__dots {
    position: absolute;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    z-index: 10;
  }

  .hero-banner-carousel__dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .hero-banner-carousel__dot.active {
    background: #ffffff;
    transform: scale(1.2);
  }

  /* Responsive */
  @media screen and (max-width: 768px) {
    .hero-banner-carousel__content {
      padding: 0 15px;
    }

    .hero-banner-carousel__title {
      font-size: 36px;
    }

    .hero-banner-carousel__buttons {
      width: 100%;
      justify-content: flex-start;
    }

    .hero-banner-carousel__navigation {
      width: 40px;
      height: 40px;
      font-size: 16px;
    }

    .hero-banner-carousel__navigation--prev {
      left: 10px;
    }

    .hero-banner-carousel__navigation--next {
      right: 10px;
    }
  }

  @media screen and (max-width: 480px) {
    .hero-banner-carousel__buttons {
      flex-direction: column;
      max-width: 250px;
    }

    .hero-banner-carousel__button {
      text-align: center;
    }
  }
</style>

<section class="hero-banner-carousel js-hero-carousel">
  <div class="hero-banner-carousel__container">
    {% for block in section.blocks %}
      <div
        class="hero-banner-carousel__slide {% if forloop.first %}active{% endif %}"
        data-slide-index="{{ forloop.index0 }}"
        {{ block.shopify_attributes }}>
        {% if block.settings.slide_link != blank %}
          <a
            href="{{ block.settings.slide_link }}"
            class="hero-banner-carousel__slide-link"
            aria-label="Navigate to slide content">
        {% endif %}

        {% if block.settings.background_image != blank %}
          <img
            src="{{ block.settings.background_image | image_url: width: 2000 }}"
            alt="{{ block.settings.background_image.alt | escape }}"
            class="hero-banner-carousel__image hero-banner-carousel__image--desktop"
            loading="eager"
            width="2000"
            height="500">
          <img
            src="{{ block.settings.background_image_mobile | default: block.settings.background_image | image_url: width: 1000 }}"
            alt="{{ block.settings.background_image_mobile.alt | default: block.settings.background_image.alt | escape }}"
            class="hero-banner-carousel__image hero-banner-carousel__image--mobile"
            loading="eager"
            width="1000"
            height="500">
        {% endif %}

        <div class="hero-banner-carousel__overlay"></div>

        {% if block.settings.slide_link != blank %}
          </a>
        {% endif %}

        <div class="hero-banner-carousel__content">
          <div class="hero-banner-carousel__text-container">
            <h1 class="hero-banner-carousel__title bold">{{ block.settings.title }}</h1>
            <p class="hero-banner-carousel__subtitle regular">{{ block.settings.subtitle }}</p>
            <div class="hero-banner-carousel__buttons">
              {%- if block.settings.button_1_text != blank and block.settings.button_1_link != blank -%}
                <a
                  href="{{ block.settings.button_1_link }}"
                  class="hero-banner-carousel__button condensed-bold"
                  style="
                     color: {{ block.settings.button_1_text_color }};
                     border-color: {{ block.settings.button_1_border_color }};
                     background: {{ block.settings.button_1_bg_color }};
                   ">
                  {{ block.settings.button_1_text }}
                </a>
              {%- endif -%}
              {%- if block.settings.button_2_text != blank and block.settings.button_2_link != blank -%}
                <a
                  href="{{ block.settings.button_2_link }}"
                  class="hero-banner-carousel__button condensed-bold"
                  style="
                     color: {{ block.settings.button_2_text_color }};
                     border-color: {{ block.settings.button_2_border_color }};
                     background: {{ block.settings.button_2_bg_color }};
                   ">
                  {{ block.settings.button_2_text }}
                </a>
              {%- endif -%}
            </div>
          </div>
        </div>
      </div>
    {% endfor %}

    {% if section.blocks.size > 1 and section.settings.show_navigation %}
      <button
        class="hero-banner-carousel__navigation hero-banner-carousel__navigation--prev"
        aria-label="Previous slide"
        type="button">
        &#8249;
      </button>
      <button
        class="hero-banner-carousel__navigation hero-banner-carousel__navigation--next"
        aria-label="Next slide"
        type="button">
        &#8250;
      </button>
    {% endif %}

    {% if section.blocks.size > 1 and section.settings.show_dots %}
      <div class="hero-banner-carousel__dots">
        {% for block in section.blocks %}
          <button
            class="hero-banner-carousel__dot {% if forloop.first %}active{% endif %}"
            data-slide="{{ forloop.index0 }}"
            aria-label="Go to slide {{ forloop.index }}"
            type="button"></button>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</section>

<script>
  class HeroBannerCarousel {
    constructor(element) {
      this.carousel = element;
      this.slides = Array.from(this.carousel.querySelectorAll('.hero-banner-carousel__slide'));
      this.dots = Array.from(this.carousel.querySelectorAll('.hero-banner-carousel__dot'));
      this.prevBtn = this.carousel.querySelector('.hero-banner-carousel__navigation--prev');
      this.nextBtn = this.carousel.querySelector('.hero-banner-carousel__navigation--next');
      this.currentSlide = 0;
      this.totalSlides = this.slides.length;
      this.isAnimating = false;
      this.autoplayInterval = null;
      this.autoplayDelay = 6000; // 6 seconds
  
      console.log('=== DEBUG HERO BANNER SIMPLE ===');
      console.log('Total slides:', this.totalSlides);
      console.log('Prev button found:', !!this.prevBtn);
      console.log('Next button found:', !!this.nextBtn);
      console.log('Dots found:', this.dots.length);
      console.log('Carousel element:', this.carousel);
  
      this.init();
    }
  
    init() {
      if (this.totalSlides <= 1) {
        console.log('Not enough slides for carousel');
        return;
      }
      
      this.setupEventListeners();
      this.startAutoplay();
      console.log('Carousel initialized successfully');
    }
  
    setupEventListeners() {
      if (this.prevBtn) {
        this.prevBtn.addEventListener('click', (e) => {
          e.preventDefault();
          console.log('Previous button clicked');
          if (this.isAnimating) return;
          this.goToPrevSlide();
          this.resetAutoplay();
        });
        console.log('Previous button listener added');
      } else {
        console.log('Previous button not found!');
      }
  
      if (this.nextBtn) {
        this.nextBtn.addEventListener('click', (e) => {
          e.preventDefault();
          console.log('Next button clicked');
          if (this.isAnimating) return;
          this.goToNextSlide();
          this.resetAutoplay();
        });
        console.log('Next button listener added');
      } else {
        console.log('Next button not found!');
      }
  
      this.dots.forEach((dot, index) => {
        dot.addEventListener('click', (e) => {
          e.preventDefault();
          console.log('Dot clicked:', index);
          if (this.isAnimating) return;
          this.goToSlide(index);
          this.resetAutoplay();
        });
      });
      console.log('Dot listeners added for', this.dots.length, 'dots');
  
      this.carousel.addEventListener('mouseenter', () => this.pauseAutoplay());
      this.carousel.addEventListener('mouseleave', () => this.startAutoplay());
    }
  
    goToSlide(index) {
      if (this.isAnimating || index === this.currentSlide) return;
      
      console.log('Going to slide:', index, 'from:', this.currentSlide);
      this.isAnimating = true;
  
      // Remove active class from current slide and dot
      this.slides[this.currentSlide].classList.remove('active');
      if (this.dots[this.currentSlide]) {
        this.dots[this.currentSlide].classList.remove('active');
      }
  
      // Add prev class for animation
      if (index < this.currentSlide) {
        this.slides[this.currentSlide].classList.add('prev');
      }
  
      // Update current slide
      this.currentSlide = index;
  
      // Add active class to new slide and dot
      this.slides[this.currentSlide].classList.add('active');
      if (this.dots[this.currentSlide]) {
        this.dots[this.currentSlide].classList.add('active');
      }
  
      // Clean up classes after animation
      setTimeout(() => {
        this.slides.forEach(slide => slide.classList.remove('prev'));
        this.isAnimating = false;
        console.log('Animation completed for slide:', index);
      }, 800);
    }
  
    goToNextSlide() {
      const nextIndex = (this.currentSlide + 1) % this.totalSlides;
      console.log('Next slide calculated:', nextIndex);
      this.goToSlide(nextIndex);
    }
  
    goToPrevSlide() {
      const prevIndex = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;
      console.log('Previous slide calculated:', prevIndex);
      this.goToSlide(prevIndex);
    }
  
    startAutoplay() {
      if (this.totalSlides <= 1) return;
      
      if (this.autoplayInterval) {
        clearInterval(this.autoplayInterval);
      }
  
      this.autoplayInterval = setInterval(() => {
        console.log('Autoplay triggered');
        this.goToNextSlide();
      }, this.autoplayDelay);
      console.log('Autoplay started with delay:', this.autoplayDelay);
    }
  
    pauseAutoplay() {
      if (this.autoplayInterval) {
        clearInterval(this.autoplayInterval);
        this.autoplayInterval = null;
        console.log('Autoplay paused');
      }
    }
  
    resetAutoplay() {
      console.log('Autoplay reset');
      this.pauseAutoplay();
      this.startAutoplay();
    }
  }
  
  // Initialize carousel when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM loaded, looking for carousels...');
    const carousels = document.querySelectorAll('.js-hero-carousel');
    console.log('Found carousels:', carousels.length);
    carousels.forEach((carousel, index) => {
      console.log('Initializing carousel', index);
      new HeroBannerCarousel(carousel);
    });
  });
</script>

{% schema %}
  {
    "name": "Hero Banner Carousel",
    "max_blocks": 5,
    "settings": [
      {
        "type": "checkbox",
        "id": "show_navigation",
        "label": "Show Navigation Arrows",
        "default": true
      }, {
        "type": "checkbox",
        "id": "show_dots",
        "label": "Show Navigation Dots",
        "default": true
      }, {
        "type": "checkbox",
        "id": "enable_autoplay",
        "label": "Enable Autoplay",
        "default": true
      }, {
        "type": "range",
        "id": "autoplay_delay",
        "min": 3,
        "max": 10,
        "step": 1,
        "unit": "s",
        "label": "Autoplay Delay",
        "default": 5
      }
    ],
    "blocks": [
      {
        "type": "slide",
        "name": "Slide",
        "settings": [
          {
            "type": "image_picker",
            "id": "background_image",
            "label": "Desktop Background Image",
            "info": "Recommended size: 2000x500px"
          },
          {
            "type": "image_picker",
            "id": "background_image_mobile",
            "label": "Mobile Background Image",
            "info": "Recommended size: 1000x500px. If not set, will use desktop image"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "PERFORMANCE, COMFORT AND STYLE."
          },
          {
            "type": "text",
            "id": "subtitle",
            "label": "Subtitle",
            "default": "GET IT NOW FOR FATHER'S DAY"
          }, {
            "type": "url",
            "id": "slide_link",
            "label": "Slide Link (Optional)",
            "info": "Add a link to make the entire slide clickable"
          }, {
            "type": "text",
            "id": "button_1_text",
            "label": "Button 1 Text",
            "default": "SHOP NOW"
          }, {
            "type": "url",
            "id": "button_1_link",
            "label": "Button 1 Link"
          }, {
            "type": "color",
            "id": "button_1_text_color",
            "label": "Button 1 Text Color",
            "default": "#ffffff"
          }, {
            "type": "color",
            "id": "button_1_border_color",
            "label": "Button 1 Border Color",
            "default": "#ffffff"
          }, {
            "type": "color",
            "id": "button_1_bg_color",
            "label": "Button 1 Background Color",
            "default": "rgba(0,0,0,0)"
          }, {
            "type": "text",
            "id": "button_2_text",
            "label": "Button 2 Text",
            "default": "EXPLORE COLLECTION"
          }, {
            "type": "url",
            "id": "button_2_link",
            "label": "Button 2 Link"
          }, {
            "type": "color",
            "id": "button_2_text_color",
            "label": "Button 2 Text Color",
            "default": "#ffffff"
          }, {
            "type": "color",
            "id": "button_2_border_color",
            "label": "Button 2 Border Color",
            "default": "#ffffff"
          }, {
            "type": "color",
            "id": "button_2_bg_color",
            "label": "Button 2 Background Color",
            "default": "rgba(255,255,255,0.1)"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Hero Banner Carousel",
        "blocks": [
          {
            "type": "slide",
            "settings": {
              "title": "PERFORMANCE, COMFORT AND STYLE.",
              "subtitle": "GET IT NOW FOR FATHER'S DAY",
              "button_1_text": "SHOP NOW",
              "button_2_text": "EXPLORE COLLECTION"
            }
          }
        ]
      }
    ]
  }
{% endschema %}