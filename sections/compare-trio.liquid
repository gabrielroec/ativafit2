<!-- Comparison Trio Cards Section -->
<section id="ctc-{{ section.id }}" class="tt-compare-trio">
  <div class="tt-compare-trio__container">
    {%- if section.blocks.size > 0 -%}
      <div class="tt-compare-trio__grid">
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'card' -%}
              {%- liquid
                assign product = block.settings.product
                assign badge_label = block.settings.badge_label
                assign badge_style = block.settings.badge_style
                assign title_override = block.settings.title_override
                assign weight_range = block.settings.weight_range
                assign bullets_top_1 = block.settings.bullets_top_1
                assign bullets_top_2 = block.settings.bullets_top_2
                assign bullets_bottom_1 = block.settings.bullets_bottom_1
                assign bullets_bottom_2 = block.settings.bullets_bottom_2
                assign bullets_bottom_3 = block.settings.bullets_bottom_3
                assign bullets_bottom_4 = block.settings.bullets_bottom_4
                assign image_override = block.settings.image_override
                assign price_mode = block.settings.price_mode
                assign price_manual = block.settings.price_manual
                assign cta_label = block.settings.cta_label
                assign cta_action = block.settings.cta_action
                
                # Product data
                assign card_title = title_override | default: product.title
                assign card_image = image_override | default: product.featured_image
                assign card_url = product.url
                
                # Price logic
                if price_mode == 'manual' and price_manual != blank
                  assign card_price = price_manual
                else
                  assign card_price = product.price_min | money
                endif
                
                # Badge highlight check
                assign is_highlight = false
                if badge_style == 'highlight'
                  assign is_highlight = true
                endif
              -%}
              
              <article class="tt-compare-trio__card{% if is_highlight %} tt-compare-trio__card--highlight{% endif %}" 
                       aria-labelledby="card-title-{{ block.id }}" {{ block.shopify_attributes }}>
                
                {%- if card_image -%}
                  <div class="tt-compare-trio__image">
                    {%- if badge_label != blank -%}
                      <div class="tt-compare-trio__badge{% if is_highlight %} tt-compare-trio__badge--highlight{% endif %}">
                        <span>{{ badge_label }}</span>
                      </div>
                    {%- endif -%}
                    <img src="{{ card_image | image_url: width: 400 }}"
                         alt="{{ card_image.alt | default: card_title }}"
                         loading="lazy"
                         decoding="async"
                         width="{{ card_image.width }}"
                         height="{{ card_image.height }}"
                         sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw">
                  </div>
                {%- endif -%}
                
                <div class="tt-compare-trio__content">
                  <h3 id="card-title-{{ block.id }}" class="tt-compare-trio__title">
                    {{ card_title }}
                  </h3>
                  
                  
                   {%- if bullets_top_1 != blank -%}
                     <div class="tt-compare-trio__description">
                       <p>{{ bullets_top_1 }}</p>
                     </div>
                   {%- endif -%}
                   
                   {%- if bullets_top_2 != blank -%}
                     <div class="tt-compare-trio__subtitle">
                       <p>{{ bullets_top_2 }}</p>
                     </div>
                   {%- endif -%}
                   
                   {%- if weight_range != blank -%}
                     <div class="tt-compare-trio__weight">
                       <p>{{ weight_range }}</p>
                     </div>
                   {%- endif -%}
                   
                   {%- if bullets_bottom_1 != blank -%}
                     <div class="tt-compare-trio__features">
                       <p>{{ bullets_bottom_1 }}</p>
                     </div>
                   {%- endif -%}
                   
                   {%- if bullets_bottom_2 != blank or bullets_bottom_3 != blank or bullets_bottom_4 != blank -%}
                     <ul class="tt-compare-trio__bullets">
                       {%- if bullets_bottom_2 != blank -%}
                         <li>{{ bullets_bottom_2 }}</li>
                       {%- endif -%}
                       {%- if bullets_bottom_3 != blank -%}
                         <li>{{ bullets_bottom_3 }}</li>
                       {%- endif -%}
                       {%- if bullets_bottom_4 != blank -%}
                         <li>{{ bullets_bottom_4 }}</li>
                       {%- endif -%}
                     </ul>
                   {%- endif -%}
                  
                  <div class="tt-compare-trio__price">
                    From {{ card_price }}
                  </div>
                  
                  {%- if cta_label != blank -%}
                    <div class="tt-compare-trio__cta">
                      {%- if cta_action == 'add_to_cart_ajax' and product.available -%}
                        <button type="button" 
                                class="tt-compare-trio__button tt-compare-trio__button--ajax"
                                data-product-id="{{ product.id }}"
                                data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                                data-cart-add-url="{{ routes.cart_add_url }}"
                                data-section-id="{{ section.id }}">
                          {{ cta_label }}
                        </button>
                        <div class="tt-compare-trio__ajax-message" role="alert" aria-live="polite" style="display: none;"></div>
                      {%- else -%}
                        <a href="{{ card_url }}" class="tt-compare-trio__button tt-compare-trio__button--link">
                          {{ cta_label }}
                        </a>
                      {%- endif -%}
                    </div>
                  {%- endif -%}
                </div>
              </article>
          {%- endcase -%}
        {%- endfor -%}
      </div>
    {%- else -%}
      <div class="tt-compare-trio__empty">
        <p>Add cards to display your comparison</p>
      </div>
    {%- endif -%}
  </div>
</section>

<style>
  #ctc-{{ section.id }} {
    --ctc-text-color: {{ section.settings.text_color | default: '#333333' }};
    --ctc-bg-color: {{ section.settings.bg_color | default: '#ffffff' }};
    --ctc-card-bg: {{ section.settings.card_bg_color | default: '#ffffff' }};
    --ctc-badge-bg: {{ section.settings.badge_bg_color | default: '#f0f0f0' }};
    --ctc-badge-text: {{ section.settings.badge_text_color | default: '#666666' }};
    --ctc-badge-highlight-bg: {{ section.settings.badge_highlight_bg_color | default: '#007bff' }};
    --ctc-badge-highlight-text: {{ section.settings.badge_highlight_text_color | default: '#ffffff' }};
    --ctc-border-color: {{ section.settings.border_color | default: '#e0e0e0' }};
    --ctc-cta-bg: {{ section.settings.cta_bg_color | default: '#000000' }};
    --ctc-cta-text: {{ section.settings.cta_text_color | default: '#ffffff' }};
    --ctc-cta-hover-bg: {{ section.settings.cta_hover_bg_color | default: '#333333' }};
    --ctc-cta-hover-text: {{ section.settings.cta_hover_text_color | default: '#ffffff' }};
    --ctc-card-radius: {{ section.settings.card_radius | default: 8 }}px;
    --ctc-card-shadow: {{ section.settings.card_shadow | default: '0 2px 8px rgba(0,0,0,0.1)' }};
    --ctc-gap: {{ section.settings.gap | default: 24 }}px;
    --ctc-padding: {{ section.settings.padding | default: 24 }}px;
    --ctc-max-width: {{ section.settings.max_card_width | default: 400 }}px;
    
    background-color: var(--ctc-bg-color);
    padding: {{ section.settings.section_padding_top | default: 40 }}px 0 {{ section.settings.section_padding_bottom | default: 40 }}px;
  }
  
  .tt-compare-trio__container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  .tt-compare-trio__grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 0;
    align-items: stretch;
  }
  
  .tt-compare-trio__card {
    background-color: transparent;
    border: none;
    border-radius: 0;
    box-shadow: none;
    padding: 0;
    position: relative;
    display: flex;
    flex-direction: column;
    transition: none;
    max-width: none;
    margin: 0;
  }
  
  .tt-compare-trio__card--highlight {
    border-color: var(--ctc-badge-highlight-bg);
  }
  
  .tt-compare-trio__badge {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: fit-content;
    background-color: #EB701F;
    color: #ffffff;
    padding: 8px 12px;
    border-radius: 0 0 12px 12px;
    border-left: 2px solid #EB701F;
    border-right: 2px solid #EB701F;
    border-bottom: 2px solid #EB701F;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 22px;
    line-height: 40px;
    letter-spacing: 0%;
    text-align: center;
    z-index: 2;
  }
  
  .tt-compare-trio__badge--highlight {
    background-color: #EB701F;
    color: #ffffff;
  }
  
  
  .tt-compare-trio__image {
    margin: 0;
    padding: 0 20px 20px 20px;
    text-align: center;
    background-color: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    min-height: 200px;
  }
  
  /* Primeiro card - padding apenas à esquerda */
  .tt-compare-trio__card:nth-child(1) .tt-compare-trio__image {
    padding: 0px 0 0px 0px;
  }
  
  /* Segundo card - sem padding */
  .tt-compare-trio__card:nth-child(2) .tt-compare-trio__image {
    padding: 0px 20px 0px 20px;
  }
  
  /* Terceiro card - padding apenas à direita */
  .tt-compare-trio__card:nth-child(3) .tt-compare-trio__image {
    padding: 0px 0px 0px 0px;
  }
  
  .tt-compare-trio__image img {
    width: 100%;
    height: 280px;
    object-fit: contain;
    border-radius: 4px;
    background-color: #f5f5f5;
    padding: 10px;
  }
  
  .tt-compare-trio__content {
    flex: 1;
    display: flex;
    flex-direction: column;
    text-align: center;
    padding: 20px;
  }
  
  /* Primeiro card - padding apenas à esquerda */
  .tt-compare-trio__card:nth-child(1) .tt-compare-trio__content {
    padding: 0px 0 0px 0px;
  }
  
  /* Segundo card - sem padding */
  .tt-compare-trio__card:nth-child(2) .tt-compare-trio__content {
    padding: 0;
  }
  
  /* Terceiro card - padding apenas à direita */
  .tt-compare-trio__card:nth-child(3) .tt-compare-trio__content {
    padding: 0px 0px 0px 0;
  }
  
  .tt-compare-trio__title {
    font-family: 'Barlow', sans-serif;
    font-weight: 700;
    font-style: normal;
    font-size: 26px;
    line-height: 40px;
    letter-spacing: 0%;
    text-align: center;
    color: #EB701F;
    margin: 0 0 12px 0;
  }
  
  
  .tt-compare-trio__weight {
    margin: 0 0 16px 0;
    text-align: center;
  }
  
  .tt-compare-trio__weight p {
    margin: 0;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 18px;
    line-height: 23px;
    letter-spacing: 0%;
    text-align: center;
    color: #666;
  }
  
  .tt-compare-trio__description {
    margin: 0;
    padding: 20px;
    text-align: center;
    background-color: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
  }
  
  .tt-compare-trio__description p {
    margin: 0;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 18px;
    line-height: 23px;
    letter-spacing: 0%;
    text-align: center;
    color: var(--ctc-text-color);
  }
  
  .tt-compare-trio__subtitle {
    margin: 0;
    padding: 20px;
    text-align: center;
    background-color: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
  }
  
  .tt-compare-trio__subtitle p {
    margin: 0;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 18px;
    line-height: 23px;
    letter-spacing: 0%;
    text-align: center;
    color: var(--ctc-text-color);
  }
  
  .tt-compare-trio__weight {
    margin: 0;
    padding: 20px;
    text-align: center;
    background-color: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
  }
  
  .tt-compare-trio__weight p {
    margin: 0;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 18px;
    line-height: 23px;
    letter-spacing: 0%;
    text-align: center;
    color: #666;
  }
  
  .tt-compare-trio__features {
    margin: 0;
    padding: 20px;
    text-align: center;
    background-color: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
  }
  
  .tt-compare-trio__features p {
    margin: 0;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 18px;
    line-height: 23px;
    letter-spacing: 0%;
    text-align: center;
    color: var(--ctc-text-color);
  }
  
  .tt-compare-trio__bullets {
    list-style: none;
    padding: 20px;
    margin: 0;
    text-align: center;
    background-color: #f5f5f5;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex: 1;
  }
  
  .tt-compare-trio__bullets li {
    position: relative;
    padding-left: 0;
    margin-bottom: 8px;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 18px;
    line-height: 23px;
    letter-spacing: 0%;
    text-align: center;
    color: var(--ctc-text-color);
  }
  
  .tt-compare-trio__bullets li::before {
    content: '· ';
    color: #666;
    font-weight: bold;
  }
  
  .tt-compare-trio__price {
    font-family: 'Barlow', sans-serif;
    font-weight: 700;
    font-style: normal;
    font-size: 22px;
    line-height: 40px;
    letter-spacing: 0%;
    text-align: center;
    color: var(--ctc-text-color);
    margin: 0;
    padding: 20px;
    background-color: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
  }
  
  .tt-compare-trio__cta {
    margin: 0;
    padding: 20px;
    background-color: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
  }
  
  .tt-compare-trio__button {
    display: block;
    width: 100%;
    padding: 12px 24px;
    background-color: var(--ctc-cta-bg);
    color: var(--ctc-cta-text);
    border: none;
    border-radius: 6px;
    font-family: 'Barlow', sans-serif;
    font-weight: 500;
    font-style: normal;
    font-size: 26px;
    line-height: 40px;
    letter-spacing: 0%;
    text-decoration: none;
    text-align: center;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .tt-compare-trio__button:hover {
    background-color: var(--ctc-cta-hover-bg);
    color: var(--ctc-cta-hover-text);
    transform: translateY(-1px);
  }
  
  .tt-compare-trio__button:focus {
    outline: 2px solid var(--ctc-badge-highlight-bg);
    outline-offset: 2px;
  }
  
  .tt-compare-trio__button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
  
  .tt-compare-trio__ajax-message {
    margin-top: 8px;
    padding: 8px 12px;
    border-radius: 4px;
    font-size: 14px;
  }
  
  .tt-compare-trio__ajax-message--success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }
  
  .tt-compare-trio__ajax-message--error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }
  
  .tt-compare-trio__empty {
    text-align: center;
    padding: 40px 20px;
    color: #666;
  }
  
  /* Tablet styles */
  @media (min-width: 768px) {
    .tt-compare-trio__grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  /* Desktop styles */
  @media (min-width: 1024px) {
    .tt-compare-trio__grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 0;
    }
    
    .tt-compare-trio__container {
      padding: 0 40px;
    }
  }
  
  /* Equal height cards */
  {%- if section.settings.equal_height -%}
  .tt-compare-trio__grid {
    align-items: stretch;
  }
  
  .tt-compare-trio__card {
    height: 100%;
  }
  {%- endif -%}
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const ajaxButtons = document.querySelectorAll('.tt-compare-trio__button--ajax');
    
    ajaxButtons.forEach(function(button) {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        
        const productId = this.dataset.productId;
        const variantId = this.dataset.variantId;
        const cartAddUrl = this.dataset.cartAddUrl;
        const sectionId = this.dataset.sectionId;
        const messageEl = this.parentNode.querySelector('.tt-compare-trio__ajax-message');
        
        if (!variantId || !cartAddUrl) {
          showMessage(messageEl, 'Product not available', 'error');
          return;
        }
        
        // Disable button during request
        this.disabled = true;
        this.textContent = 'Adding...';
        
        // Add to cart
        fetch(cartAddUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'Accept': 'application/json'
          },
          body: new URLSearchParams({
            'id': variantId,
            'quantity': '1'
          })
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 422) {
            throw new Error(data.description || 'Unable to add item to cart');
          }
          
          // Update cart drawer
          return updateCartDrawer(sectionId);
        })
        .then(() => {
          showMessage(messageEl, 'Added to cart!', 'success');
          updateCartCount();
          openCartDrawer();
        })
        .catch(error => {
          console.error('Cart add error:', error);
          showMessage(messageEl, error.message || 'Unable to add item to cart', 'error');
        })
        .finally(() => {
          // Re-enable button
          this.disabled = false;
          this.textContent = this.dataset.originalText || 'Add to Cart';
        });
      });
      
      // Store original text
      button.dataset.originalText = button.textContent;
    });
    
    function showMessage(element, message, type) {
      if (!element) return;
      
      element.textContent = message;
      element.className = `tt-compare-trio__ajax-message tt-compare-trio__ajax-message--${type}`;
      element.style.display = 'block';
      
      // Hide after 3 seconds
      setTimeout(() => {
        element.style.display = 'none';
      }, 3000);
    }
    
    function updateCartDrawer(sectionId) {
      // You need to replace 'cart-drawer' with the actual section ID of your cart drawer
      // To find it: inspect the cart drawer element and look for data-section-id attribute
      const cartDrawerSectionId = '{{ section.settings.cart_drawer_section_id | default: "cart-drawer" }}';
      
      return fetch(`/?section_id=${cartDrawerSectionId}`)
        .then(response => response.text())
        .then(html => {
          const parser = new DOMParser();
          const doc = parser.parseFromString(html, 'text/html');
          const newCartDrawer = doc.querySelector('[data-section-id="' + cartDrawerSectionId + '"]');
          const currentCartDrawer = document.querySelector('[data-section-id="' + cartDrawerSectionId + '"]');
          
          if (newCartDrawer && currentCartDrawer) {
            currentCartDrawer.innerHTML = newCartDrawer.innerHTML;
          }
        });
    }
    
    function updateCartCount() {
      const cartCountElements = document.querySelectorAll('[data-cart-count]');
      cartCountElements.forEach(function(element) {
        // You might need to update this based on your theme's cart count implementation
        fetch('/cart.js')
          .then(response => response.json())
          .then(cart => {
            element.textContent = cart.item_count;
          });
      });
    }
    
    function openCartDrawer() {
      // Try to find and trigger cart drawer opening
      const cartDrawer = document.querySelector('.cart-drawer, [data-cart-drawer], .drawer--cart');
      if (cartDrawer) {
        cartDrawer.classList.add('is-open', 'open', 'active');
        document.body.classList.add('cart-drawer-open', 'drawer-open');
        
        // Focus on cart drawer title for accessibility
        const cartTitle = cartDrawer.querySelector('h2, .cart-drawer__title, [data-cart-title]');
        if (cartTitle) {
          cartTitle.focus();
        }
      }
    }
  });
</script>

{%- schema -%}
{
  "name": "Comparison Trio Cards",
  "tag": "section",
  "class": "section-compare-trio",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "gap",
      "label": "Gap between cards",
      "min": 16,
      "max": 48,
      "step": 4,
      "unit": "px",
      "default": 24
    },
    {
      "type": "range",
      "id": "max_card_width",
      "label": "Max card width",
      "min": 300,
      "max": 500,
      "step": 20,
      "unit": "px",
      "default": 400
    },
    {
      "type": "checkbox",
      "id": "equal_height",
      "label": "Equal height cards",
      "default": true,
      "info": "Makes all cards the same height with CTAs aligned at bottom"
    },
    {
      "type": "header",
      "content": "Card Styling"
    },
    {
      "type": "range",
      "id": "card_radius",
      "label": "Card border radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "default": 8
    },
    {
      "type": "select",
      "id": "card_shadow",
      "label": "Card shadow",
      "options": [
        {"value": "none", "label": "None"},
        {"value": "0 1px 3px rgba(0,0,0,0.1)", "label": "Light"},
        {"value": "0 2px 8px rgba(0,0,0,0.1)", "label": "Medium"},
        {"value": "0 4px 16px rgba(0,0,0,0.15)", "label": "Heavy"}
      ],
      "default": "0 2px 8px rgba(0,0,0,0.1)"
    },
    {
      "type": "range",
      "id": "padding",
      "label": "Card padding",
      "min": 16,
      "max": 40,
      "step": 4,
      "unit": "px",
      "default": 24
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Section background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "card_bg_color",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Card border",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "badge_bg_color",
      "label": "Badge background",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "badge_text_color",
      "label": "Badge text",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "badge_highlight_bg_color",
      "label": "Highlight badge background",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "badge_highlight_text_color",
      "label": "Highlight badge text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "cta_bg_color",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "cta_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "cta_hover_bg_color",
      "label": "Button hover background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "cta_hover_text_color",
      "label": "Button hover text",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "label": "Top padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "label": "Bottom padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 40
    },
    {
      "type": "header",
      "content": "AJAX Cart Settings"
    },
    {
      "type": "text",
      "id": "cart_drawer_section_id",
      "label": "Cart Drawer Section ID",
      "default": "cart-drawer",
      "info": "To find this: inspect your cart drawer element and look for the data-section-id attribute"
    }
  ],
  "blocks": [
    {
      "type": "card",
      "name": "Product Card",
      "limit": 4,
      "settings": [
        {
          "type": "header",
          "content": "Product"
        },
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "text",
          "id": "title_override",
          "label": "Title override",
          "info": "Leave blank to use product title"
        },
        {
          "type": "image_picker",
          "id": "image_override",
          "label": "Image override",
          "info": "Leave blank to use product featured image"
        },
        {
          "type": "header",
          "content": "Badge"
        },
        {
          "type": "text",
          "id": "badge_label",
          "label": "Badge label",
          "placeholder": "e.g., Most Popular"
        },
        {
          "type": "select",
          "id": "badge_style",
          "label": "Badge style",
          "options": [
            {"value": "default", "label": "Default"},
            {"value": "highlight", "label": "Highlight"}
          ],
          "default": "default",
          "info": "Only one card should have 'Highlight' style"
        },
        {
          "type": "text",
          "id": "weight_range",
          "label": "Weight range",
          "placeholder": "e.g., 5-50 lbs"
        },
        {
          "type": "header",
          "content": "Top Bullets"
        },
        {
          "type": "text",
          "id": "bullets_top_1",
          "label": "Bullet 1"
        },
        {
          "type": "text",
          "id": "bullets_top_2",
          "label": "Bullet 2"
        },
        {
          "type": "text",
          "id": "bullets_top_3",
          "label": "Bullet 3"
        },
        {
          "type": "text",
          "id": "bullets_top_4",
          "label": "Bullet 4"
        },
        {
          "type": "header",
          "content": "Bottom Bullets"
        },
        {
          "type": "text",
          "id": "bullets_bottom_1",
          "label": "Bullet 1"
        },
        {
          "type": "text",
          "id": "bullets_bottom_2",
          "label": "Bullet 2"
        },
        {
          "type": "text",
          "id": "bullets_bottom_3",
          "label": "Bullet 3"
        },
        {
          "type": "text",
          "id": "bullets_bottom_4",
          "label": "Bullet 4"
        },
        {
          "type": "header",
          "content": "Pricing"
        },
        {
          "type": "select",
          "id": "price_mode",
          "label": "Price mode",
          "options": [
            {"value": "auto", "label": "Use product price"},
            {"value": "manual", "label": "Manual price"}
          ],
          "default": "auto"
        },
        {
          "type": "text",
          "id": "price_manual",
          "label": "Manual price",
          "placeholder": "e.g., $299",
          "info": "Only used when price mode is set to 'Manual price'"
        },
        {
          "type": "header",
          "content": "Call to Action"
        },
        {
          "type": "text",
          "id": "cta_label",
          "label": "Button label",
          "placeholder": "e.g., Shop Spark"
        },
        {
          "type": "select",
          "id": "cta_action",
          "label": "Button action",
          "options": [
            {"value": "link_to_product", "label": "Link to product page"},
            {"value": "add_to_cart_ajax", "label": "Add to cart (AJAX)"}
          ],
          "default": "link_to_product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Comparison Trio Cards",
      "blocks": [
        {
          "type": "card",
          "settings": {
            "badge_label": "Starter Pick",
            "badge_style": "default",
            "bullets_top_1": "Adjustable weight system",
            "bullets_top_2": "Space-saving design",
            "bullets_top_3": "Easy to store",
            "cta_label": "Shop Starter"
          }
        },
        {
          "type": "card",
          "settings": {
            "badge_label": "Most Popular",
            "badge_style": "highlight",
            "bullets_top_1": "Premium materials",
            "bullets_top_2": "Extended weight range",
            "bullets_top_3": "Professional quality",
            "cta_label": "Shop Popular"
          }
        },
        {
          "type": "card",
          "settings": {
            "badge_label": "Pro Edition",
            "badge_style": "default",
            "bullets_top_1": "Heavy-duty construction",
            "bullets_top_2": "Maximum weight capacity",
            "bullets_top_3": "Commercial grade",
            "cta_label": "Shop Pro"
          }
        }
      ]
    }
  ]
}
{%- endschema -%}
